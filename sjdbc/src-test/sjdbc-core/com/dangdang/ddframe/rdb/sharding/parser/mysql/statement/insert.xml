<?xml version="1.0" encoding="UTF-8"?>
<asserts>
    <assert id="assertInsert" sql="insert into `order`('order_id','state') values(1,'RUNNING')" expected-sql="INSERT INTO [Token(order)] ('order_id', 'state') VALUES (1, 'RUNNING')">
        <tables>
            <table name="order" />
        </tables>
        <condition-contexts>
            <condition-context>
                <condition column-name="order_id" table-name="order" operator="EQUAL">
                    <value value="1" type="java.lang.Integer" />
                </condition>
                <condition column-name="state" table-name="order" operator="EQUAL">
                    <value value="RUNNING" type="java.lang.String" />
                </condition>
            </condition-context>
        </condition-contexts>
    </assert>
    
    <assert id="assertInsertNull" sql="insert into `order`('order_id','state') values(NULL,'')" expected-sql="INSERT INTO [Token(order)] ('order_id', 'state') VALUES (NULL, '')">
        <tables>
            <table name="order" />
        </tables>
        <condition-contexts>
            <condition-context>
                <condition column-name="order_id" table-name="order" operator="EQUAL">
                    <value value="" type="java.lang.String" />
                </condition>
                <condition column-name="state" table-name="order" operator="EQUAL">
                    <value value="" type="java.lang.String" />
                </condition>
            </condition-context>
        </condition-contexts>
    </assert>
    
    <assert id="assertInsertWithAlias" sql="INSERT INTO `order` o ('order_id', 'state') VALUES (1, 'RUNNING')" expected-sql="INSERT INTO [Token(order)] o ('order_id', 'state') VALUES (1, 'RUNNING')">
        <tables>
            <table name="order" alias="o" />
        </tables>
        <condition-contexts>
            <condition-context>
                <condition column-name="order_id" table-name="order" operator="EQUAL">
                    <value value="1" type="java.lang.Integer" />
                </condition>
                <condition column-name="state" table-name="order" operator="EQUAL">
                    <value value="RUNNING" type="java.lang.String" />
                </condition>
            </condition-context>
        </condition-contexts>
    </assert>

    <assert id="assertInsertBatch1" sql="INSERT INTO `order` o ('order_id', 'state') (SELECT 1, 'RUNNING' FROM dual UNION ALL SELECT 2, 'RUNNING' FROM dual )" expected-sql="INSERT INTO [Token(order)] o ('order_id', 'state') SELECT 1, 'RUNNING' FROM dual UNION ALL SELECT 2, 'RUNNING' FROM dual">
        <tables>
            <table name="order" alias="o" />
        </tables>
        <condition-contexts>
           <condition-context/>
        </condition-contexts>
    </assert>
</asserts>
